/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import type { PublicKey } from "@metaplex-foundation/umi";
import type {
  GetDataEnumKind,
  GetDataEnumKindContent,
  Serializer,
} from "@metaplex-foundation/umi/serializers";

import {
  dataEnum,
  publicKey as publicKeySerializer,
  struct,
} from "@metaplex-foundation/umi/serializers";

export type CreateOracleArgs = { __kind: "V1"; authority: PublicKey };

export type CreateOracleArgsArgs = CreateOracleArgs;

export function getCreateOracleArgsSerializer(): Serializer<
  CreateOracleArgsArgs,
  CreateOracleArgs
> {
  return dataEnum<CreateOracleArgs>(
    [
      [
        "V1",
        struct<GetDataEnumKindContent<CreateOracleArgs, "V1">>([
          ["authority", publicKeySerializer()],
        ]),
      ],
    ],
    { description: "CreateOracleArgs" },
  );
}

// Data Enum Helpers.
export function createOracleArgs(
  kind: "V1",
  data: GetDataEnumKindContent<CreateOracleArgsArgs, "V1">,
): GetDataEnumKind<CreateOracleArgsArgs, "V1">;
export function createOracleArgs<K extends CreateOracleArgsArgs["__kind"]>(
  kind: K,
  data?: any,
): Extract<CreateOracleArgsArgs, { __kind: K }> {
  return Array.isArray(data) ? { __kind: kind, fields: data } : { __kind: kind, ...(data ?? {}) };
}
export function isCreateOracleArgs<K extends CreateOracleArgs["__kind"]>(
  kind: K,
  value: CreateOracleArgs,
): value is CreateOracleArgs & { __kind: K } {
  return value.__kind === kind;
}
