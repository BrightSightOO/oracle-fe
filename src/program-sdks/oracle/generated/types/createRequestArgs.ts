/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import type { RequestData, RequestDataArgs } from ".";
import type {
  GetDataEnumKind,
  GetDataEnumKindContent,
  Serializer,
} from "@metaplex-foundation/umi/serializers";

import { dataEnum, i64, struct, u64 } from "@metaplex-foundation/umi/serializers";

import { getRequestDataSerializer } from ".";

export type CreateRequestArgs = {
  __kind: "V1";
  reward: bigint;
  timestamp: bigint;
  data: RequestData;
};

export type CreateRequestArgsArgs = {
  __kind: "V1";
  reward: number | bigint;
  timestamp: number | bigint;
  data: RequestDataArgs;
};

export function getCreateRequestArgsSerializer(): Serializer<
  CreateRequestArgsArgs,
  CreateRequestArgs
> {
  return dataEnum<CreateRequestArgs>(
    [
      [
        "V1",
        struct<GetDataEnumKindContent<CreateRequestArgs, "V1">>([
          ["reward", u64()],
          ["timestamp", i64()],
          ["data", getRequestDataSerializer()],
        ]),
      ],
    ],
    { description: "CreateRequestArgs" },
  ) as Serializer<CreateRequestArgsArgs, CreateRequestArgs>;
}

// Data Enum Helpers.
export function createRequestArgs(
  kind: "V1",
  data: GetDataEnumKindContent<CreateRequestArgsArgs, "V1">,
): GetDataEnumKind<CreateRequestArgsArgs, "V1">;
export function createRequestArgs<K extends CreateRequestArgsArgs["__kind"]>(
  kind: K,
  data?: any,
): Extract<CreateRequestArgsArgs, { __kind: K }> {
  return Array.isArray(data) ? { __kind: kind, fields: data } : { __kind: kind, ...(data ?? {}) };
}
export function isCreateRequestArgs<K extends CreateRequestArgs["__kind"]>(
  kind: K,
  value: CreateRequestArgs,
): value is CreateRequestArgs & { __kind: K } {
  return value.__kind === kind;
}
