/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import type { ClusterFilter, Context, Program, PublicKey } from "@metaplex-foundation/umi";

import { getParimutuelResolverErrorFromCode, getParimutuelResolverErrorFromName } from "../errors";

export const PARIMUTUEL_RESOLVER_PROGRAM_ID =
  "RS1njPGQsykXyyPGUiAC9dvPyoqw73vtMFPJhipibj1" as PublicKey<"RS1njPGQsykXyyPGUiAC9dvPyoqw73vtMFPJhipibj1">;

export function createParimutuelResolverProgram(): Program {
  return {
    name: "parimutuelResolver",
    publicKey: PARIMUTUEL_RESOLVER_PROGRAM_ID,
    getErrorFromCode(code: number, cause?: Error) {
      return getParimutuelResolverErrorFromCode(code, this, cause);
    },
    getErrorFromName(name: string, cause?: Error) {
      return getParimutuelResolverErrorFromName(name, this, cause);
    },
    isOnCluster() {
      return true;
    },
  };
}

export function getParimutuelResolverProgram<T extends Program = Program>(
  context: Pick<Context, "programs">,
  clusterFilter?: ClusterFilter,
): T {
  return context.programs.get<T>("parimutuelResolver", clusterFilter);
}

export function getParimutuelResolverProgramId(
  context: Pick<Context, "programs">,
  clusterFilter?: ClusterFilter,
): PublicKey {
  return context.programs.getPublicKey(
    "parimutuelResolver",
    PARIMUTUEL_RESOLVER_PROGRAM_ID,
    clusterFilter,
  );
}
